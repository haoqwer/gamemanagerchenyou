package com.chenyou.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class OnlineplayerCountExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    public OnlineplayerCountExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andOnlineIdIsNull() {
            addCriterion("online_id is null");
            return (Criteria) this;
        }

        public Criteria andOnlineIdIsNotNull() {
            addCriterion("online_id is not null");
            return (Criteria) this;
        }

        public Criteria andOnlineIdEqualTo(Integer value) {
            addCriterion("online_id =", value, "onlineId");
            return (Criteria) this;
        }

        public Criteria andOnlineIdNotEqualTo(Integer value) {
            addCriterion("online_id <>", value, "onlineId");
            return (Criteria) this;
        }

        public Criteria andOnlineIdGreaterThan(Integer value) {
            addCriterion("online_id >", value, "onlineId");
            return (Criteria) this;
        }

        public Criteria andOnlineIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("online_id >=", value, "onlineId");
            return (Criteria) this;
        }

        public Criteria andOnlineIdLessThan(Integer value) {
            addCriterion("online_id <", value, "onlineId");
            return (Criteria) this;
        }

        public Criteria andOnlineIdLessThanOrEqualTo(Integer value) {
            addCriterion("online_id <=", value, "onlineId");
            return (Criteria) this;
        }

        public Criteria andOnlineIdIn(List<Integer> values) {
            addCriterion("online_id in", values, "onlineId");
            return (Criteria) this;
        }

        public Criteria andOnlineIdNotIn(List<Integer> values) {
            addCriterion("online_id not in", values, "onlineId");
            return (Criteria) this;
        }

        public Criteria andOnlineIdBetween(Integer value1, Integer value2) {
            addCriterion("online_id between", value1, value2, "onlineId");
            return (Criteria) this;
        }

        public Criteria andOnlineIdNotBetween(Integer value1, Integer value2) {
            addCriterion("online_id not between", value1, value2, "onlineId");
            return (Criteria) this;
        }

        public Criteria andRecordTimeIsNull() {
            addCriterion("record_time is null");
            return (Criteria) this;
        }

        public Criteria andRecordTimeIsNotNull() {
            addCriterion("record_time is not null");
            return (Criteria) this;
        }

        public Criteria andRecordTimeEqualTo(Date value) {
            addCriterionForJDBCDate("record_time =", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("record_time <>", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("record_time >", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("record_time >=", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeLessThan(Date value) {
            addCriterionForJDBCDate("record_time <", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("record_time <=", value, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeIn(List<Date> values) {
            addCriterionForJDBCDate("record_time in", values, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("record_time not in", values, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("record_time between", value1, value2, "recordTime");
            return (Criteria) this;
        }

        public Criteria andRecordTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("record_time not between", value1, value2, "recordTime");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourIsNull() {
            addCriterion("show_time_hour is null");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourIsNotNull() {
            addCriterion("show_time_hour is not null");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourEqualTo(String value) {
            addCriterion("show_time_hour =", value, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourNotEqualTo(String value) {
            addCriterion("show_time_hour <>", value, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourGreaterThan(String value) {
            addCriterion("show_time_hour >", value, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourGreaterThanOrEqualTo(String value) {
            addCriterion("show_time_hour >=", value, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourLessThan(String value) {
            addCriterion("show_time_hour <", value, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourLessThanOrEqualTo(String value) {
            addCriterion("show_time_hour <=", value, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourLike(String value) {
            addCriterion("show_time_hour like", value, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourNotLike(String value) {
            addCriterion("show_time_hour not like", value, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourIn(List<String> values) {
            addCriterion("show_time_hour in", values, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourNotIn(List<String> values) {
            addCriterion("show_time_hour not in", values, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourBetween(String value1, String value2) {
            addCriterion("show_time_hour between", value1, value2, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andShowTimeHourNotBetween(String value1, String value2) {
            addCriterion("show_time_hour not between", value1, value2, "showTimeHour");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountIsNull() {
            addCriterion("online_player_count is null");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountIsNotNull() {
            addCriterion("online_player_count is not null");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountEqualTo(Integer value) {
            addCriterion("online_player_count =", value, "onlinePlayerCount");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountNotEqualTo(Integer value) {
            addCriterion("online_player_count <>", value, "onlinePlayerCount");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountGreaterThan(Integer value) {
            addCriterion("online_player_count >", value, "onlinePlayerCount");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("online_player_count >=", value, "onlinePlayerCount");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountLessThan(Integer value) {
            addCriterion("online_player_count <", value, "onlinePlayerCount");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountLessThanOrEqualTo(Integer value) {
            addCriterion("online_player_count <=", value, "onlinePlayerCount");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountIn(List<Integer> values) {
            addCriterion("online_player_count in", values, "onlinePlayerCount");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountNotIn(List<Integer> values) {
            addCriterion("online_player_count not in", values, "onlinePlayerCount");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountBetween(Integer value1, Integer value2) {
            addCriterion("online_player_count between", value1, value2, "onlinePlayerCount");
            return (Criteria) this;
        }

        public Criteria andOnlinePlayerCountNotBetween(Integer value1, Integer value2) {
            addCriterion("online_player_count not between", value1, value2, "onlinePlayerCount");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounIsNull() {
            addCriterion("allplayer_coun is null");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounIsNotNull() {
            addCriterion("allplayer_coun is not null");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounEqualTo(Integer value) {
            addCriterion("allplayer_coun =", value, "allplayerCoun");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounNotEqualTo(Integer value) {
            addCriterion("allplayer_coun <>", value, "allplayerCoun");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounGreaterThan(Integer value) {
            addCriterion("allplayer_coun >", value, "allplayerCoun");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounGreaterThanOrEqualTo(Integer value) {
            addCriterion("allplayer_coun >=", value, "allplayerCoun");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounLessThan(Integer value) {
            addCriterion("allplayer_coun <", value, "allplayerCoun");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounLessThanOrEqualTo(Integer value) {
            addCriterion("allplayer_coun <=", value, "allplayerCoun");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounIn(List<Integer> values) {
            addCriterion("allplayer_coun in", values, "allplayerCoun");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounNotIn(List<Integer> values) {
            addCriterion("allplayer_coun not in", values, "allplayerCoun");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounBetween(Integer value1, Integer value2) {
            addCriterion("allplayer_coun between", value1, value2, "allplayerCoun");
            return (Criteria) this;
        }

        public Criteria andAllplayerCounNotBetween(Integer value1, Integer value2) {
            addCriterion("allplayer_coun not between", value1, value2, "allplayerCoun");
            return (Criteria) this;
        }

        public Criteria andServerIdIsNull() {
            addCriterion("server_id is null");
            return (Criteria) this;
        }

        public Criteria andServerIdIsNotNull() {
            addCriterion("server_id is not null");
            return (Criteria) this;
        }

        public Criteria andServerIdEqualTo(Integer value) {
            addCriterion("server_id =", value, "serverId");
            return (Criteria) this;
        }

        public Criteria andServerIdNotEqualTo(Integer value) {
            addCriterion("server_id <>", value, "serverId");
            return (Criteria) this;
        }

        public Criteria andServerIdGreaterThan(Integer value) {
            addCriterion("server_id >", value, "serverId");
            return (Criteria) this;
        }

        public Criteria andServerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("server_id >=", value, "serverId");
            return (Criteria) this;
        }

        public Criteria andServerIdLessThan(Integer value) {
            addCriterion("server_id <", value, "serverId");
            return (Criteria) this;
        }

        public Criteria andServerIdLessThanOrEqualTo(Integer value) {
            addCriterion("server_id <=", value, "serverId");
            return (Criteria) this;
        }

        public Criteria andServerIdIn(List<Integer> values) {
            addCriterion("server_id in", values, "serverId");
            return (Criteria) this;
        }

        public Criteria andServerIdNotIn(List<Integer> values) {
            addCriterion("server_id not in", values, "serverId");
            return (Criteria) this;
        }

        public Criteria andServerIdBetween(Integer value1, Integer value2) {
            addCriterion("server_id between", value1, value2, "serverId");
            return (Criteria) this;
        }

        public Criteria andServerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("server_id not between", value1, value2, "serverId");
            return (Criteria) this;
        }

        public Criteria andChannelIdIsNull() {
            addCriterion("channel_id is null");
            return (Criteria) this;
        }

        public Criteria andChannelIdIsNotNull() {
            addCriterion("channel_id is not null");
            return (Criteria) this;
        }

        public Criteria andChannelIdEqualTo(Integer value) {
            addCriterion("channel_id =", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdNotEqualTo(Integer value) {
            addCriterion("channel_id <>", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdGreaterThan(Integer value) {
            addCriterion("channel_id >", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("channel_id >=", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdLessThan(Integer value) {
            addCriterion("channel_id <", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdLessThanOrEqualTo(Integer value) {
            addCriterion("channel_id <=", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdIn(List<Integer> values) {
            addCriterion("channel_id in", values, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdNotIn(List<Integer> values) {
            addCriterion("channel_id not in", values, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdBetween(Integer value1, Integer value2) {
            addCriterion("channel_id between", value1, value2, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdNotBetween(Integer value1, Integer value2) {
            addCriterion("channel_id not between", value1, value2, "channelId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated do_not_delete_during_merge Fri Sep 21 14:13:44 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_onlineplayer_count
     *
     * @mbggenerated Fri Sep 21 14:13:44 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}